<br>
<div class="row full-width" style="margin-left: 20px">
  <div class="large-2 columns">
    <p style="padding-top:20px">Resets the averages DB's and initiates fetching.</p>
    <%= button_to "Setup", {:action => "Setup"}, 
        {class: "button secondary large", style: "margin-left:40px"} %>

    <p style="padding-top:10px">Empties the tables keeping the averages for all past data.</p>
    <%= button_to "Nuke average tables", {:action => "NUKE_Averages"}, 
        {class: "button small secondary", style: "margin-left:40px"} %>

    <p style="padding-top:20px">Fills the averaging tables for all past data points using the 1 minute table.</p>
    <%= button_to "populate average tables", {:action => "do_old_assets_averaging"}, 
        {class: "button small secondary", style: "margin-left:40px"} %>

    <p style="padding-top:20px">Start the workers for fetching data from associated API's, saving the data, and 
    generates a new average datapoint for each average table in an interval of appropriate
    minutes.</p>
    <%= button_to "Beging Logging", {:action => "start_log"}, 
        {class: "button small secondary", style: "margin-left:40px"} %>

  </div>

  <div class="large-8 columns">
    <%= render 'table', :rows => @one_min_rows, :name => "1 Minute Assets" %>
    <%= render 'table', :rows => @five_min_rows, :name => "5 Minute Assets" %>
    <%= render 'table', :rows => @thirty_min_rows, :name => "30 Minute Assets" %>
    <%= render 'table', :rows => @two_hour_rows, :name => "2 Hour Assets" %>
    <%= render 'table', :rows => @six_hour_rows, :name => "6 Hour Assets" %>
  </div>

  <div class="large-2 columns">
    <h3 class="subheader" style="margin-left:10px">Stats</h3>

    <ul class="no-bullet" style="padding-bottom:20px">
      <li> 5 Minute assets: <%= FiveminuteTimedAsset.count %> items </li>
      <li> 30 Minute assets: <%= ThirtyminuteTimedAsset.count %> items </li>
      <li> 2 hours assets: <%= TwohoursTimedAsset.count %> items </li>
      <li> 6 hours assets: <%= SixhoursTimedAsset.count %> items </li>
    </ul>

    <% workers = Sidekiq::Workers.new %>
    Running workers via queue:  <%= workers.size %> <br>

    <% Sidekiq.redis do |conn| %>
      Running workers via redis:  <%= conn.smembers('workers').count %> <br>
    <% end %>

    <ul class="no-bullet" style="padding-left:10px;padding-top:6px;">
      <% workers.each do |worker, msg| %>
        <li> <%= msg['payload']['class'].to_s + msg['payload']['args'].to_s %> </li>
        <% # sidekiq/blob/master/web/views/_workers.slim for worker data
           # worker is the unique ID per worker
           # msg['payload']['class'] is the class of the worker
           # msg['payload']['args'] are what arguments were sent to each worker %>
      <% end %>
    </ul>
  </div>

</div>